#+BEGIN_SRC emacs-lisp
  (random t)
  (defun sb-create-password(n &optional use-digits use-letters use-symbols)
    (let ((signs)
          (password))
      (progn
        (when use-digits (setq signs "0123456789"))
        (when use-letters (setq signs (concat signs
                                              "abcdefghijklmnopqrstuvwxyz"
                                              "ABCDEFGHIJKLMNOPQRSTUVWXYZ")))
        (when use-symbols (setq signs (concat signs
                                              "&~\"#'{([-`_\^@)"
                                              "]=}+$£%*,?;.:/!§")))
        (unless signs (setq signs "0123456789"))
        (dotimes (i n (concat password))
          (setq password (cons (elt signs (random (length signs))) password))))))

  (sb-gen-password 10 t t t)
#+END_SRC

#+RESULTS:
: ]nUJ)[2|Ax

#+BEGIN_SRC emacs-lisp

#+END_SRC


#+NAME: passwords
| Intitulé | Identifiant | Mot de passe | Date de modification |
|----------+-------------+--------------+----------------------|
| site1    | login1      | passwd1      | [2016-12-19 Mon]     |
| site2    | login2      | passwd2      | [2016-12-20 Tue]     |
| site3    | login3      | passwd3      | [2016-12-21 Wed]     |


#+BEGIN_SRC emacs-lisp :var data=passwords :colnames yes :results value
  (map 'list 'car data)
#+END_SRC

#+RESULTS:
| site1 | site2 | site3 |
